#!/bin/python

import os
import pandas as pd

## Just the directory on bluepebble used for this analysis
wd = os.getcwd()
ARIES_DATA_DIR = ""
SCRATCH_WD = "/user/work/tb13101/cell-specific-effects/aries-ewas"
METHODS = ["celldmc", "tca", "tcareg", "toast"]

## Extract traits from meta-data
meta_file = SCRATCH_WD + "/data/metadata.tsv"
x = pd.read_csv(meta_file, sep = "\t")
TRAITS = x["alspac_name"].tolist()

rule all:
    input:
        expand(SCRATCH_WD + "/data/svs/{trait}.tsv", trait = TRAITS),
        expand(SCRATCH_WD + "/results/ewas-res/{method}_res_split_{trait}.tsv", method = METHODS, trait = TRAITS), 

rule gen_svs:
    input:
        script = wd + "/scripts/gen-svs.R",
        pheno = SCRATCH_WD + "/data/aries-fom-phenotype-data.tsv",
        meta = meta_file,
        meth = SCRATCH_WD + "/../sims/data/aries_fom.RData", 
        pcs = SCRATCH_WD + "/data/FOM_pcs.eigenvec",
        aries_dir = ARIES_DATA_DIR
    output:
        results = SCRATCH_WD + "/data/svs/{trait}.tsv", 
        removed = SCRATCH_WD + "/data/svs/removed/{trait}.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.pheno}' \
                                        '{input.meth}' \
                                        '{input.meta}' \
                                        '{input.pcs}' \
                                        '{input.aries_dir}' \
                                        '{output.results}' \
                                        '{output.removed}' """

# rule combine_covariates:
#     input:
#         script = wd + "/scripts/combine-covariates.R",
#         pheno = SCRATCH_WD + "/data/aries-fom-phenotype-data.tsv",
#         meta = meta_file,
#         aries_dir = ARIES_DATA_DIR
#     output:
#         SCRATCH_WD + "data/covars.tsv", 
#     shell:
#         "echo $HOSTNAME; Rscript {input.script} '{input.pheno}' '{input.meta}' '{input.aries_dir}' '{output}'"

def ewas_out(path, methods, trait):
    outlist = []
    for meth in methods:
        outlist.append(path + "/" + meth + "_res_split_" + trait + ".RData")
    return outlist
      
ewas_out(SCRATCH_WD + "/results/ewas-res", METHODS, "Alb_FOM1")

rule run_ewas:
    input:
        script = wd + "/scripts/ewas.R",
        pheno = SCRATCH_WD + "/data/aries-fom-phenotype-data.tsv",
        meth = SCRATCH_WD + "/../sims/data/aries_fom.RData", 
        meta = meta_file,
        svs = SCRATCH_WD + "/data/svs/{trait}.tsv", 
        pcs = SCRATCH_WD + "/data/FOM_pcs.eigenvec",
        aries_dir = ARIES_DATA_DIR,         
    output:
        lambda wildcards: \
            out = ewas_out(SCRATCH_WD + "/results/ewas-res", METHODS, wildcards.trait)
    params:
        failed_out = SCRATCH_WD + "results/ewas-res/failed-ewas.tsv"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.pheno}' \
                                        '{input.meth}' \
                                        '{input.meta}' \
                                        '{input.svs}' \
                                        '{input.pcs}' \
                                        '{input.aries_dir}' \
                                        '{output.out}' \
                                        '{params.failed_out}' """


## Compare to just normal EWAS
# rule compare_res

# rule report:
    
